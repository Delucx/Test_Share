import fitz  # PyMuPDF
import pandas as pd
from tkinter import Tk
from tkinter.filedialog import askopenfilename, asksaveasfilename

# Extract filtered text containing "*/" from both left and right sides of a PDF
def extract_filtered_text_aligned(pdf_path):
    doc = fitz.open(pdf_path)
    left_text_blocks = []
    right_text_blocks = []
    
    for page_num in range(doc.page_count):
        page = doc.load_page(page_num)
        blocks = page.get_text("dict")["blocks"]
        
        # Define the middle of the page to separate left and right
        page_width = page.rect.width
        mid_x = page_width / 2
        
        for block in blocks:
            if "lines" in block:
                for line in block["lines"]:
                    for span in line["spans"]:
                        text = span["text"]
                        bbox = span["bbox"]  # Bounding box for the text [x0, y0, x1, y1]
                        x0, y0 = bbox[0], bbox[1]
                        
                        # Filter text that contains "*/"
                        if "*/" in text:
                            # If text is in the left half
                            if x0 < mid_x:
                                left_text_blocks.append((text, y0))
                            # If text is in the right half
                            else:
                                right_text_blocks.append((text, y0))
    
    # Sort both lists by the vertical position (y0)
    left_text_blocks.sort(key=lambda x: x[1])
    right_text_blocks.sort(key=lambda x: x[1])
    
    # Ensure both lists have the same length by padding with empty strings
    max_len = max(len(left_text_blocks), len(right_text_blocks))
    left_text_blocks += [('', None)] * (max_len - len(left_text_blocks))
    right_text_blocks += [('', None)] * (max_len - len(right_text_blocks))
    
    # Create aligned columns for the left and right text
    left_text = [item[0] for item in left_text_blocks]
    right_text = [item[0] for item in right_text_blocks]
    
    return left_text, right_text

# Save aligned left and right side text to an Excel file
def save_to_excel(left_text, right_text, excel_path):
    # Create a DataFrame with two columns: Left Side and Right Side
    df = pd.DataFrame({
        "Left Side": left_text,
        "Right Side": right_text
    })
    df.to_excel(excel_path, index=False)

# GUI file picker
def pick_file():
    # Hide the main Tkinter window
    root = Tk()
    root.withdraw()
    
    # Open file dialog to pick a PDF file
    pdf_path = askopenfilename(
        title="Select PDF File",
        filetypes=[("PDF Files", "*.pdf")]
    )
    
    if pdf_path:
        # Extract filtered text containing "*/" and align it
        left_text, right_text = extract_filtered_text_aligned(pdf_path)
        
        # Open save dialog to choose Excel file location
        excel_path = asksaveasfilename(
            title="Save Excel File",
            defaultextension=".xlsx",
            filetypes=[("Excel Files", "*.xlsx")]
        )
        
        if excel_path:
            # Save to Excel
            save_to_excel(left_text, right_text, excel_path)
            print(f"Data successfully extracted and saved to {excel_path}")
        else:
            print("Excel file save cancelled.")
    else:
        print("PDF file selection cancelled.")

# Main function
if __name__ == "__main__":
    pick_file()
